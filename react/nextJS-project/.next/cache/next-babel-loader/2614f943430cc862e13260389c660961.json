{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nvar MyCount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyCount, _Component);\n\n  function MyCount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyCount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(MyCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"span\", null, this.state.count);\n    }\n  }]);\n\n  return MyCount;\n}(Component);\n\nexport default MyCount;","map":{"version":3,"sources":["F:\\vue-react-webpack-learn\\learn\\react\\nextJS-project\\pages\\c.js"],"names":["React","Component","MyCount","count","interval","setInterval","setState","state","clearInterval"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE;AADD,K;;;;;;;wCAIY;AAAA;;AAClB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE,MAAI,CAACI,KAAL,CAAWJ,KAAX,GAAmB;AAA3B,SAAd;AACD,OAF0B,EAExB,IAFwB,CAA3B;AAGD;;;2CACsB;AACrB,UAAG,KAAKC,QAAR,EAAkB;AAChBI,QAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACD;AACF;;;6BACS;AACR,aAAO,oBAAO,KAAKG,KAAL,CAAWJ,KAAlB,CAAP;AACD;;;;EAjBmBF,S;;AAqBtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass MyCount extends Component {\r\n  state = {\r\n    count: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState({count: this.state.count + 1})\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if(this.interval) {\r\n      clearInterval(this.interval)\r\n    }\r\n  }\r\n  render () {\r\n    return <span>{this.state.count}</span>\r\n  }\r\n  \r\n}\r\n\r\nexport default MyCount"]},"metadata":{},"sourceType":"module"}