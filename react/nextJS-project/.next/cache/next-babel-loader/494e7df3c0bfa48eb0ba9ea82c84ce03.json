{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect, useReducer } from 'react';\n\nvar MyCount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyCount, _Component);\n\n  function MyCount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyCount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(MyCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"h2\", null, \"c page\"), __jsx(\"span\", null, this.state.count));\n    }\n  }]);\n\n  return MyCount;\n}(Component);\n\nfunction MyCountFunc() {\n  // const [count, setCount] = useState(0) // 返回数组[a,b]，通过解构使用\n  var _useReducer = useReducer(CountReducer, 0),\n      count = _useReducer[0],\n      dispatchCount = _useReducer[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      // setCount(c => c + 1)\n      dispatchCount({\n        type: 'add'\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"c page MyCountFunc\"), __jsx(\"span\", null, count));\n}\n\nfunction CountReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nexport default MyCountFunc;","map":{"version":3,"sources":["F:\\vue-react-webpack-learn\\learn\\react\\nextJS-project\\pages\\c.js"],"names":["React","Component","useState","useEffect","useReducer","MyCount","count","interval","setInterval","setState","state","clearInterval","MyCountFunc","CountReducer","dispatchCount","type","action"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,UAAhD,QAAkE,OAAlE;;IAEMC,O;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE;AADD,K;;;;;;;wCAIY;AAAA;;AAClB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE,MAAI,CAACI,KAAL,CAAWJ,KAAX,GAAmB;AAA3B,SAAd;AACD,OAF0B,EAExB,IAFwB,CAA3B;AAGD;;;2CACsB;AACrB,UAAG,KAAKC,QAAR,EAAkB;AAChBI,QAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACD;AACF;;;6BACS;AACR,aACE,mBACE,2BADF,EAEE,oBAAO,KAAKG,KAAL,CAAWJ,KAAlB,CAFF,CADF;AAMD;;;;EAtBmBL,S;;AA0BtB,SAASW,WAAT,GAAuB;AACrB;AADqB,oBAGYR,UAAU,CAACS,YAAD,EAAe,CAAf,CAHtB;AAAA,MAGbP,KAHa;AAAA,MAGNQ,aAHM;;AAKrBX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMI,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC;AACAM,MAAAA,aAAa,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAb;AACD,KAH2B,EAGzB,IAHyB,CAA5B;AAIA,WAAO;AAAA,aAAMJ,aAAa,CAACJ,QAAD,CAAnB;AAAA,KAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,mBACE,uCADF,EAEE,oBAAOD,KAAP,CAFF,CADF;AAMD;;AAED,SAASO,YAAT,CAAsBH,KAAtB,EAA6BM,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACD,IAAf;AACE,SAAK,KAAL;AACE,aAAOL,KAAK,GAAG,CAAf;;AACF,SAAK,OAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD;;AAED,eAAeE,WAAf","sourcesContent":["import React, { Component, useState, useEffect, useReducer } from 'react'\r\n\r\nclass MyCount extends Component {\r\n  state = {\r\n    count: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState({count: this.state.count + 1})\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if(this.interval) {\r\n      clearInterval(this.interval)\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h2>c page</h2>\r\n        <span>{this.state.count}</span>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nfunction MyCountFunc() {\r\n  // const [count, setCount] = useState(0) // 返回数组[a,b]，通过解构使用\r\n\r\n  const [ count, dispatchCount ] = useReducer(CountReducer, 0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // setCount(c => c + 1)\r\n      dispatchCount({ type: 'add'})\r\n    }, 1000)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>c page MyCountFunc</h2>\r\n      <span>{count}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CountReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return state + 1\r\n    case 'minus':\r\n      return state - 1\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nexport default MyCountFunc"]},"metadata":{},"sourceType":"module"}