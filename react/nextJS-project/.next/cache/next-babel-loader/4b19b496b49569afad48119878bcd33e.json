{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect, useLayoutEffect, useReducer, useRef } from 'react';\n\nvar MyCount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyCount, _Component);\n\n  function MyCount() {\n    var _this;\n\n    _classCallCheck(this, MyCount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyCount).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    _this.ref = React.createRef();\n    return _this;\n  }\n\n  _createClass(MyCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.ref.current);\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"h2\", null, \"c page\"), __jsx(\"span\", {\n        ref: this.ref\n      }, this.state.count));\n    }\n  }]);\n\n  return MyCount;\n}(Component);\n\nfunction MyCountFunc() {\n  // const [count, setCount] = useState(0) // 返回数组[a,b]，通过解构使用\n  var _useReducer = useReducer(CountReducer, 0),\n      count = _useReducer[0],\n      dispatchCount = _useReducer[1];\n\n  var _useState = useState('jokcy'),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var inputRef = useRef();\n  useEffect(function () {\n    var interval = setInterval(function () {\n      // setCount(c => c + 1)\n      dispatchCount({\n        type: 'minus'\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []); // useEffect 第二个参数作用 => 没有第二个参数时会不断重复渲染，第二个参数为空数组时只渲染一次。第二个参数有依赖时则依据依赖的变量变化而渲染，变量未变化则不渲染\n\n  useEffect(function () {\n    console.log('effect invoked');\n    return function () {\n      return console.log('effect deteched');\n    };\n  }, [name]); // useLayoutEffect会比useEffect先执行，会在没更新成真正的DOM之前会先执行，useEffect会等插入DOM真实节点后执行\n\n  useLayoutEffect(function () {\n    console.log('layout effect invoked');\n    return function () {\n      return console.log('layout effect deteched');\n    };\n  }, [name]);\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"c page MyCountFunc\"), __jsx(\"span\", null, count), __jsx(\"input\", {\n    ref: inputRef,\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return dispatchCount({\n        type: 'add'\n      });\n    }\n  }, count));\n}\n\nfunction CountReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nexport default MyCountFunc;","map":{"version":3,"sources":["F:\\vue-react-webpack-learn\\learn\\react\\nextJS-project\\pages\\c.js"],"names":["React","Component","useState","useEffect","useLayoutEffect","useReducer","useRef","MyCount","count","ref","createRef","console","log","current","interval","setInterval","setState","state","clearInterval","MyCountFunc","CountReducer","dispatchCount","name","setName","inputRef","type","e","target","value","action"],"mappings":"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","sourcesContent":["import React, { \r\n  Component,\r\n  useState, \r\n  useEffect, \r\n  useLayoutEffect, \r\n  useReducer,\r\n  useRef\r\n } from 'react'\r\n\r\nclass MyCount extends Component {\r\n  constructor () {\r\n    super()\r\n    this.ref = React.createRef()\r\n  }\r\n  state = {\r\n    count: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.ref.current)\r\n    this.interval = setInterval(() => {\r\n      this.setState({count: this.state.count + 1})\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if(this.interval) {\r\n      clearInterval(this.interval)\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h2>c page</h2>\r\n        <span ref={this.ref}>{this.state.count}</span>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nfunction MyCountFunc() {\r\n  // const [count, setCount] = useState(0) // 返回数组[a,b]，通过解构使用\r\n\r\n  const [ count, dispatchCount ] = useReducer(CountReducer, 0)\r\n  const [name, setName ] = useState('jokcy')\r\n\r\n  const inputRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // setCount(c => c + 1)\r\n      dispatchCount({ type: 'minus'})\r\n    }, 1000)\r\n    return () => clearInterval(interval)\r\n  }, []) // useEffect 第二个参数作用 => 没有第二个参数时会不断重复渲染，第二个参数为空数组时只渲染一次。第二个参数有依赖时则依据依赖的变量变化而渲染，变量未变化则不渲染\r\n\r\n  useEffect(() => {\r\n    console.log('effect invoked')\r\n    return () => console.log('effect deteched')\r\n  }, [name])\r\n\r\n  // useLayoutEffect会比useEffect先执行，会在没更新成真正的DOM之前会先执行，useEffect会等插入DOM真实节点后执行\r\n  useLayoutEffect(() => {\r\n    console.log('layout effect invoked')\r\n    return () => console.log('layout effect deteched')\r\n  }, [name])\r\n\r\n  return (\r\n    <div>\r\n      <h2>c page MyCountFunc</h2>\r\n      <span>{count}</span>\r\n      <input ref={inputRef} value={name} onChange={(e) => setName(e.target.value)} />\r\n      <button onClick={() => dispatchCount({type:'add'})}>{count}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CountReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return state + 1\r\n    case 'minus':\r\n      return state - 1\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nexport default MyCountFunc"]},"metadata":{},"sourceType":"module"}